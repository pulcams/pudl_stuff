xquery version "1.0";

(:~ 
 : This XQuery Update inserts physical and logical structmaps based on the 'default' structmap,
 : as generated by the pudl Object METS script (run-objects.sh).
 :)

declare namespace mets="http://www.loc.gov/METS/";
declare namespace xlink="http://www.w3.org/1999/xlink";
import module namespace functx="http://www.functx.com" 
    at "http://www.xqueryfunctions.com/xq/functx-1.0-doc-2007-01.xq";

(: 
 : ***********************************************************************
 : Supply pudl number and point to collection file before each run... 
 : ***********************************************************************
:)
declare variable $PUDLNO as xs:integer? := 112;
declare variable $COLLECTION as document-node()* := collection("xsl/collection.xml");

for $mets in $COLLECTION
let $fileid := replace($mets/tokenize(document-uri(.),'/')[last()],'.mets','')
let $default := $mets//mets:structMap[@ID="default"]
return
if (not($mets//mets:structMap[@TYPE="Logical"]) and not($mets//mets:structMap[@TYPE="Physical"])) then (
    insert nodes (<mets:structMap TYPE="Physical" LABEL="Foliation">
         <mets:div TYPE="TightBoundManuscript" LABEL="" DMDID="object.dmd"> </mets:div>
      </mets:structMap>,
      <mets:structMap TYPE="Logical" LABEL="Contents">
         <mets:div LABEL="" DMDID="object.dmd" TYPE="Work">{
for $x at $pos in $default//mets:div[@ORDER] 
    let $xlinkhref := concat('http://diglib.princeton.edu/images/pudl',functx:pad-integer-to-length($PUDLNO,4),'/',$fileid,'/',functx:pad-integer-to-length($pos, 8),'.mets')
        return
            <mets:div TYPE="LogicalMember" ORDER="{$pos}">
               <mets:mptr LOCTYPE="URL" xlink:href="{$xlinkhref}"/>
            </mets:div>
      }</mets:div>
     </mets:structMap>
    )  as last into $mets/mets:mets
) else()
